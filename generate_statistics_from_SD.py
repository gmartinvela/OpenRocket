import fileinput
import time

file_path = '/media/ABB4-4F3A/DATALOG.TXT'

def split_in_blocks(txt_file, pattern):
	'''
	Find the last appears of the text that indicate a new flight and divide in the number of blocks generated by the rocket

	Return: A list that contains all the different blocks of data.
	'''
	num_times_find_pattern = []
	for num_line, line in enumerate(fileinput.input(txt_file)):
		if pattern in line:
			num_times_find_pattern.append(num_line)
	blocks_of_data = []
	with open(txt_file) as f:
		lines = f.readlines()
		for num_header_line in num_times_find_pattern: 
			if num_header_line == 0:
				num_header_line_prev = num_header_line
			else:
				block_lines = lines[num_header_line_prev + 1 : num_header_line - 1]
				blocks_of_data.append(block_lines)
				num_header_line_prev = num_header_line
		block_lines = lines[num_header_line_prev + 1 : num_line + 1]
		blocks_of_data.append(block_lines)
	return blocks_of_data

def manage_data_from_blocks(blocks):
	blocks_dict = {}
	for block_number, block in enumerate(blocks):
		blocks_dict['millis_%s' % block_number] = []
		for line in block:
			line_list = line.strip().split(",")
			#print line_list
			timestamp_list = int(line_list[0])
			#print timestamp_list
			blocks_dict['millis_%s' % block_number].append(timestamp_list)
	

	for position, millis in enumerate(blocks_dict['millis_4']):
		millis_interval_list = []
		if position != 0:
			millis_interval = millis - millis_prev
			#print millis_interval
			millis_interval_list.append(millis_interval)
		millis_prev = millis
	millis_average = sum(millis_interval_list) / position
	print millis_interval


	#print blocks_dict

start = time.time()
blocks = split_in_blocks(file_path, "millis")
manage_data_from_blocks(blocks)
stop = time.time()
total_time = stop -start
print total_time